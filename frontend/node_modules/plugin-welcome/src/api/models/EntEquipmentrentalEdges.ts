/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Patient
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntEmployee,
    EntEmployeeFromJSON,
    EntEmployeeFromJSONTyped,
    EntEmployeeToJSON,
    EntEquipment,
    EntEquipmentFromJSON,
    EntEquipmentFromJSONTyped,
    EntEquipmentToJSON,
    EntEquipmenttype,
    EntEquipmenttypeFromJSON,
    EntEquipmenttypeFromJSONTyped,
    EntEquipmenttypeToJSON,
    EntMember,
    EntMemberFromJSON,
    EntMemberFromJSONTyped,
    EntMemberToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntEquipmentrentalEdges
 */
export interface EntEquipmentrentalEdges {
    /**
     * 
     * @type {EntEmployee}
     * @memberof EntEquipmentrentalEdges
     */
    employee?: EntEmployee;
    /**
     * 
     * @type {EntEquipment}
     * @memberof EntEquipmentrentalEdges
     */
    equipment?: EntEquipment;
    /**
     * 
     * @type {EntEquipmenttype}
     * @memberof EntEquipmentrentalEdges
     */
    equipmenttype?: EntEquipmenttype;
    /**
     * 
     * @type {EntMember}
     * @memberof EntEquipmentrentalEdges
     */
    member?: EntMember;
}

export function EntEquipmentrentalEdgesFromJSON(json: any): EntEquipmentrentalEdges {
    return EntEquipmentrentalEdgesFromJSONTyped(json, false);
}

export function EntEquipmentrentalEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntEquipmentrentalEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'employee': !exists(json, 'employee') ? undefined : EntEmployeeFromJSON(json['employee']),
        'equipment': !exists(json, 'equipment') ? undefined : EntEquipmentFromJSON(json['equipment']),
        'equipmenttype': !exists(json, 'equipmenttype') ? undefined : EntEquipmenttypeFromJSON(json['equipmenttype']),
        'member': !exists(json, 'member') ? undefined : EntMemberFromJSON(json['member']),
    };
}

export function EntEquipmentrentalEdgesToJSON(value?: EntEquipmentrentalEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'employee': EntEmployeeToJSON(value.employee),
        'equipment': EntEquipmentToJSON(value.equipment),
        'equipmenttype': EntEquipmenttypeToJSON(value.equipmenttype),
        'member': EntMemberToJSON(value.member),
    };
}


