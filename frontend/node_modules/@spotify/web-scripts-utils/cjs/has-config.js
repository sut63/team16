"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var glob_1 = __importDefault(require("glob"));
var read_pkg_up_1 = __importDefault(require("read-pkg-up"));
var get_consuming_root_1 = require("./get-consuming-root");
var has_key_in_obj_1 = require("./has-key-in-obj");
var getDependencyTypePath = function (dependency, type) {
    switch (type) {
        case 'dev':
            return "devDependencies." + dependency;
        case 'peer':
            return "peerDependencies." + dependency;
        default:
            return "dependencies." + dependency;
    }
};
exports.hasConfig = function (sources) {
    var _a = read_pkg_up_1["default"].sync({
        cwd: get_consuming_root_1.getConsumingRoot()
    }) || { packageJson: {}, path: get_consuming_root_1.getConsumingRoot() }, pkgPath = _a.path, packageJson = _a.packageJson;
    var root = pkgPath.slice(0, pkgPath.length - '/package.json'.length);
    return sources.some(function (source) {
        switch (source.type) {
            case 'file':
                return !!glob_1["default"].sync(source.pattern, { cwd: root }).length;
            case 'package.json':
                return has_key_in_obj_1.hasKeyInObj(source.property, packageJson);
            case 'dependency':
                return has_key_in_obj_1.hasKeyInObj(getDependencyTypePath(source.dependency, source.dependencyType), packageJson);
            default:
                return false;
        }
    });
};
