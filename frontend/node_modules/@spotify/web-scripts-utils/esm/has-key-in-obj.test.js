import { hasKeyInObj } from './has-key-in-obj';
describe('hasKeyInObj', function () {
    it('works when the key is defined', function () {
        expect(hasKeyInObj('a', { a: 1, b: 2 })).toBe(true);
    });
    it('works when the key is not defined', function () {
        expect(hasKeyInObj('c', { a: 1, b: 2 })).toBe(false);
    });
    it('works when the key is nested and defined', function () {
        expect(hasKeyInObj('c.foo', { a: 1, b: 2, c: { foo: 'bar' } })).toBe(true);
    });
    it('works when the key is nested and undefined', function () {
        expect(hasKeyInObj('c.baz', { a: 1, b: 2, c: { foo: 'bar' } })).toBe(false);
    });
    it('works when the key is nested and undefined early', function () {
        expect(hasKeyInObj('d.baz', { a: 1, b: 2, c: { foo: 'bar' } })).toBe(false);
    });
    it('does not fail when the object is undefined', function () {
        expect(function () { return hasKeyInObj('foo', undefined); }).not.toThrow();
    });
});
