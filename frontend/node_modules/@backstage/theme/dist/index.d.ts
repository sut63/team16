import { Theme, ThemeOptions } from '@material-ui/core';
import { Palette, PaletteOptions } from '@material-ui/core/styles/createPalette';
import { Overrides } from '@material-ui/core/styles/overrides';

declare type PaletteAdditions = {
    status: {
        ok: string;
        warning: string;
        error: string;
        pending: string;
        running: string;
        aborted: string;
    };
    border: string;
    textContrast: string;
    textVerySubtle: string;
    textSubtle: string;
    highlight: string;
    errorBackground: string;
    warningBackground: string;
    infoBackground: string;
    errorText: string;
    infoText: string;
    warningText: string;
    linkHover: string;
    link: string;
    gold: string;
    sidebar: string;
    tabbar: {
        indicator: string;
    };
    bursts: {
        fontColor: string;
        slackChannelText: string;
        backgroundColor: {
            default: string;
        };
    };
    pinSidebarButton: {
        icon: string;
        background: string;
    };
    banner: {
        info: string;
        error: string;
    };
};
declare type BackstagePalette = Palette & PaletteAdditions;
declare type BackstagePaletteOptions = PaletteOptions & PaletteAdditions;
interface BackstageTheme extends Theme {
    palette: BackstagePalette;
}
interface BackstageThemeOptions extends ThemeOptions {
    palette: BackstagePaletteOptions;
}
/**
 * A simpler configuration for creating a new theme that just tweaks some parts of the backstage one.
 */
declare type SimpleThemeOptions = {
    palette: BackstagePaletteOptions;
    fontFamily?: string;
};

declare const lightTheme: BackstageTheme;
declare const darkTheme: BackstageTheme;

declare function createThemeOptions(options: SimpleThemeOptions): BackstageThemeOptions;
declare function createThemeOverrides(theme: BackstageTheme): Overrides;
declare function createTheme(options: SimpleThemeOptions): BackstageTheme;

export { BackstagePalette, BackstagePaletteOptions, BackstageTheme, BackstageThemeOptions, SimpleThemeOptions, createTheme, createThemeOptions, createThemeOverrides, darkTheme, lightTheme };
