'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

require('commander');
require('chalk');
var index = require('./index-efc4b836.js');
var fs = _interopDefault(require('fs-extra'));
require('path');

const SKIPPED_KEYS = ["access", "registry", "tag"];
const PKG_PATH = "package.json";
const PKG_BACKUP_PATH = "package.json-prepack";
const pre = async () => {
  var _a;
  const pkgPath = index.paths.resolveTarget(PKG_PATH);
  const pkgContent = await fs.readFile(pkgPath, "utf8");
  const pkg = JSON.parse(pkgContent);
  await fs.writeFile(PKG_BACKUP_PATH, pkgContent);
  for (const key of Object.keys((_a = pkg.publishConfig) != null ? _a : {})) {
    if (!SKIPPED_KEYS.includes(key)) {
      pkg[key] = pkg.publishConfig[key];
    }
  }
  await fs.writeJson(pkgPath, pkg, {encoding: "utf8", spaces: 2});
};
const post = async () => {
  await fs.move(PKG_BACKUP_PATH, PKG_PATH, {overwrite: true});
};

exports.post = post;
exports.pre = pre;
