// Code generated by entc, DO NOT EDIT.

package bookcourse

const (
	// Label holds the string label denoting the bookcourse type in the database.
	Label = "bookcourse"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBOOKTIME holds the string denoting the booktime field in the database.
	FieldBOOKTIME = "booktime"

	// EdgeCourse holds the string denoting the course edge name in mutations.
	EdgeCourse = "course"
	// EdgeEmployee holds the string denoting the employee edge name in mutations.
	EdgeEmployee = "employee"
	// EdgeMember holds the string denoting the member edge name in mutations.
	EdgeMember = "member"

	// Table holds the table name of the bookcourse in the database.
	Table = "bookcourses"
	// CourseTable is the table the holds the course relation/edge.
	CourseTable = "bookcourses"
	// CourseInverseTable is the table name for the Course entity.
	// It exists in this package in order to avoid circular dependency with the "course" package.
	CourseInverseTable = "courses"
	// CourseColumn is the table column denoting the course relation/edge.
	CourseColumn = "course_bookcourse"
	// EmployeeTable is the table the holds the employee relation/edge.
	EmployeeTable = "bookcourses"
	// EmployeeInverseTable is the table name for the Employee entity.
	// It exists in this package in order to avoid circular dependency with the "employee" package.
	EmployeeInverseTable = "employees"
	// EmployeeColumn is the table column denoting the employee relation/edge.
	EmployeeColumn = "employee_bookcourse"
	// MemberTable is the table the holds the member relation/edge.
	MemberTable = "bookcourses"
	// MemberInverseTable is the table name for the Member entity.
	// It exists in this package in order to avoid circular dependency with the "member" package.
	MemberInverseTable = "members"
	// MemberColumn is the table column denoting the member relation/edge.
	MemberColumn = "member_bookcourse"
)

// Columns holds all SQL columns for bookcourse fields.
var Columns = []string{
	FieldID,
	FieldBOOKTIME,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Bookcourse type.
var ForeignKeys = []string{
	"course_bookcourse",
	"employee_bookcourse",
	"member_bookcourse",
}
