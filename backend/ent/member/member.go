// Code generated by entc, DO NOT EDIT.

package member

const (
	// Label holds the string label denoting the member type in the database.
	Label = "member"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMEMBERID holds the string denoting the memberid field in the database.
	FieldMEMBERID = "memberid"
	// FieldNAME holds the string denoting the name field in the database.
	FieldNAME = "name"

	// EdgePayment holds the string denoting the payment edge name in mutations.
	EdgePayment = "payment"
	// EdgeBookcourse holds the string denoting the bookcourse edge name in mutations.
	EdgeBookcourse = "bookcourse"
	// EdgeEquipmentrental holds the string denoting the equipmentrental edge name in mutations.
	EdgeEquipmentrental = "equipmentrental"

	// Table holds the table name of the member in the database.
	Table = "members"
	// PaymentTable is the table the holds the payment relation/edge.
	PaymentTable = "payments"
	// PaymentInverseTable is the table name for the Payment entity.
	// It exists in this package in order to avoid circular dependency with the "payment" package.
	PaymentInverseTable = "payments"
	// PaymentColumn is the table column denoting the payment relation/edge.
	PaymentColumn = "member_payment"
	// BookcourseTable is the table the holds the bookcourse relation/edge.
	BookcourseTable = "bookcourses"
	// BookcourseInverseTable is the table name for the Bookcourse entity.
	// It exists in this package in order to avoid circular dependency with the "bookcourse" package.
	BookcourseInverseTable = "bookcourses"
	// BookcourseColumn is the table column denoting the bookcourse relation/edge.
	BookcourseColumn = "member_bookcourse"
	// EquipmentrentalTable is the table the holds the equipmentrental relation/edge.
	EquipmentrentalTable = "equipmentrentals"
	// EquipmentrentalInverseTable is the table name for the Equipmentrental entity.
	// It exists in this package in order to avoid circular dependency with the "equipmentrental" package.
	EquipmentrentalInverseTable = "equipmentrentals"
	// EquipmentrentalColumn is the table column denoting the equipmentrental relation/edge.
	EquipmentrentalColumn = "member_equipmentrental"
)

// Columns holds all SQL columns for member fields.
var Columns = []string{
	FieldID,
	FieldMEMBERID,
	FieldNAME,
}

var (
	// MEMBERIDValidator is a validator for the "MEMBERID" field. It is called by the builders before save.
	MEMBERIDValidator func(string) error
	// NAMEValidator is a validator for the "NAME" field. It is called by the builders before save.
	NAMEValidator func(string) error
)
