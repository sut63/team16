// Code generated by entc, DO NOT EDIT.

package employee

const (
	// Label holds the string label denoting the employee type in the database.
	Label = "employee"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEMPLOYEEID holds the string denoting the employeeid field in the database.
	FieldEMPLOYEEID = "employeeid"
	// FieldEMPLOYEENAME holds the string denoting the employeename field in the database.
	FieldEMPLOYEENAME = "employeename"
	// FieldEMPLOYEEADDRESS holds the string denoting the employeeaddress field in the database.
	FieldEMPLOYEEADDRESS = "employeeaddress"
	// FieldIDCARDNUMBER holds the string denoting the idcardnumber field in the database.
	FieldIDCARDNUMBER = "idcardnumber"

	// EdgeAge holds the string denoting the age edge name in mutations.
	EdgeAge = "age"
	// EdgePosition holds the string denoting the position edge name in mutations.
	EdgePosition = "position"
	// EdgeSalary holds the string denoting the salary edge name in mutations.
	EdgeSalary = "salary"
	// EdgePayment holds the string denoting the payment edge name in mutations.
	EdgePayment = "payment"
	// EdgeEquipment holds the string denoting the equipment edge name in mutations.
	EdgeEquipment = "equipment"
	// EdgeBookcourse holds the string denoting the bookcourse edge name in mutations.
	EdgeBookcourse = "bookcourse"
	// EdgeEquipmentrental holds the string denoting the equipmentrental edge name in mutations.
	EdgeEquipmentrental = "equipmentrental"

	// Table holds the table name of the employee in the database.
	Table = "employees"
	// AgeTable is the table the holds the age relation/edge.
	AgeTable = "employees"
	// AgeInverseTable is the table name for the Age entity.
	// It exists in this package in order to avoid circular dependency with the "age" package.
	AgeInverseTable = "ages"
	// AgeColumn is the table column denoting the age relation/edge.
	AgeColumn = "age_employee"
	// PositionTable is the table the holds the position relation/edge.
	PositionTable = "employees"
	// PositionInverseTable is the table name for the Position entity.
	// It exists in this package in order to avoid circular dependency with the "position" package.
	PositionInverseTable = "positions"
	// PositionColumn is the table column denoting the position relation/edge.
	PositionColumn = "position_employee"
	// SalaryTable is the table the holds the salary relation/edge.
	SalaryTable = "employees"
	// SalaryInverseTable is the table name for the Salary entity.
	// It exists in this package in order to avoid circular dependency with the "salary" package.
	SalaryInverseTable = "salaries"
	// SalaryColumn is the table column denoting the salary relation/edge.
	SalaryColumn = "salary_employee"
	// PaymentTable is the table the holds the payment relation/edge.
	PaymentTable = "payments"
	// PaymentInverseTable is the table name for the Payment entity.
	// It exists in this package in order to avoid circular dependency with the "payment" package.
	PaymentInverseTable = "payments"
	// PaymentColumn is the table column denoting the payment relation/edge.
	PaymentColumn = "employee_payment"
	// EquipmentTable is the table the holds the equipment relation/edge.
	EquipmentTable = "equipment"
	// EquipmentInverseTable is the table name for the Equipment entity.
	// It exists in this package in order to avoid circular dependency with the "equipment" package.
	EquipmentInverseTable = "equipment"
	// EquipmentColumn is the table column denoting the equipment relation/edge.
	EquipmentColumn = "employee_equipment"
	// BookcourseTable is the table the holds the bookcourse relation/edge.
	BookcourseTable = "bookcourses"
	// BookcourseInverseTable is the table name for the Bookcourse entity.
	// It exists in this package in order to avoid circular dependency with the "bookcourse" package.
	BookcourseInverseTable = "bookcourses"
	// BookcourseColumn is the table column denoting the bookcourse relation/edge.
	BookcourseColumn = "employee_bookcourse"
	// EquipmentrentalTable is the table the holds the equipmentrental relation/edge.
	EquipmentrentalTable = "equipmentrentals"
	// EquipmentrentalInverseTable is the table name for the Equipmentrental entity.
	// It exists in this package in order to avoid circular dependency with the "equipmentrental" package.
	EquipmentrentalInverseTable = "equipmentrentals"
	// EquipmentrentalColumn is the table column denoting the equipmentrental relation/edge.
	EquipmentrentalColumn = "employee_equipmentrental"
)

// Columns holds all SQL columns for employee fields.
var Columns = []string{
	FieldID,
	FieldEMPLOYEEID,
	FieldEMPLOYEENAME,
	FieldEMPLOYEEADDRESS,
	FieldIDCARDNUMBER,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Employee type.
var ForeignKeys = []string{
	"age_employee",
	"position_employee",
	"salary_employee",
}

var (
	// EMPLOYEEIDValidator is a validator for the "EMPLOYEEID" field. It is called by the builders before save.
	EMPLOYEEIDValidator func(string) error
	// EMPLOYEENAMEValidator is a validator for the "EMPLOYEENAME" field. It is called by the builders before save.
	EMPLOYEENAMEValidator func(string) error
	// EMPLOYEEADDRESSValidator is a validator for the "EMPLOYEEADDRESS" field. It is called by the builders before save.
	EMPLOYEEADDRESSValidator func(string) error
	// IDCARDNUMBERValidator is a validator for the "IDCARDNUMBER" field. It is called by the builders before save.
	IDCARDNUMBERValidator func(string) error
)
