// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ages": {
            "get": {
                "description": "list age entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List age entities",
                "operationId": "list-age",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Age"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create age",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create age",
                "operationId": "create-age",
                "parameters": [
                    {
                        "description": "Age entity",
                        "name": "age",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Age"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Age"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ages/{id}": {
            "get": {
                "description": "get age by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a age entity by ID",
                "operationId": "get-age",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Age ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Age"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookcoursebymembers/{id}": {
            "get": {
                "description": "get GetBookcoursebyMember by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a GetBookcoursebyMember entity by ID",
                "operationId": "get-GetBookcoursebyMember",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GetBookcoursebyMember ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bookcourse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookcourses": {
            "get": {
                "description": "list bookcourse entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List bookcourse entities",
                "operationId": "list-bookcourse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bookcourse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create bookcourse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create bookcourse",
                "operationId": "create-bookcourse",
                "parameters": [
                    {
                        "description": "Bookcourse entity",
                        "name": "bookcourse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Bookcourse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bookcourse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookcourses/{id}": {
            "get": {
                "description": "get bookcourse by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a bookcourse entity by ID",
                "operationId": "get-bookcourse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bookcourse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Bookcourse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/classifiers": {
            "get": {
                "description": "list classifier entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List classifier entities",
                "operationId": "list-classifier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Classifier"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create classifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create classifier",
                "operationId": "create-classifier",
                "parameters": [
                    {
                        "description": "Classifier entity",
                        "name": "classifier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Classifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Classifier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/classifiers/{id}": {
            "get": {
                "description": "get classifier by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a classifier entity by ID",
                "operationId": "get-classifier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Classifier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Classifier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "description": "list course entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List course entities",
                "operationId": "list-course",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Course"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create course",
                "operationId": "create-course",
                "parameters": [
                    {
                        "description": "Course entity",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Course"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Course"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "description": "get course by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a course entity by ID",
                "operationId": "get-course",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Course"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "list employee entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List employee entities",
                "operationId": "list-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Employee"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create employee",
                "operationId": "create-employee",
                "parameters": [
                    {
                        "description": "Employee entity",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "description": "get employee by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a employee entity by ID",
                "operationId": "get-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/equipmentbyemployees/{id}": {
            "get": {
                "description": "get GetEquipmentbyEmployee by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a GetEquipmentbyEmployee entity by ID",
                "operationId": "get-GetEquipmentbyEmployee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GetEquipmentbyEmployee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Equipment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/equipmentrentalbymembers/{id}": {
            "get": {
                "description": "get GetEquipmentrentalbyMember by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a GetEquipmentrentalbyMember entity by ID",
                "operationId": "get-GetEquipmentrentalbyMember",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GetEquipmentrentalbyMember ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Equipmentrental"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/equipmentrentals": {
            "get": {
                "description": "list equipmentrental entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List equipmentrental entities",
                "operationId": "list-equipmentrental",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Equipmentrental"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create equipmentrental",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create equipmentrental",
                "operationId": "create-equipmentrental",
                "parameters": [
                    {
                        "description": "Equipmentrental entity",
                        "name": "equipmentrental",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Equipmentrental"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Equipmentrental"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/equipmentrentals/{id}": {
            "get": {
                "description": "get equipmentrental by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a equipmentrental entity by ID",
                "operationId": "get-equipmentrental",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Equipmentrental ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Equipmentrental"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/equipments": {
            "get": {
                "description": "list equipment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List equipment entities",
                "operationId": "list-equipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Equipment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create equipment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create equipment",
                "operationId": "create-equipment",
                "parameters": [
                    {
                        "description": "Equipment entity",
                        "name": "equipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Equipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Equipment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/equipments/{id}": {
            "get": {
                "description": "get equipment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a equipment entity by ID",
                "operationId": "get-equipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Equipment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Equipment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/equipmenttypes": {
            "get": {
                "description": "list equipmenttype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List equipmenttype entities",
                "operationId": "list-equipmenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Equipmenttype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create equipmenttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create equipmenttype",
                "operationId": "create-equipmenttype",
                "parameters": [
                    {
                        "description": "Equipmenttype entity",
                        "name": "equipmenttype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Equipmenttype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Equipmenttype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/equipmenttypes/{id}": {
            "get": {
                "description": "get equipmenttype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a equipmenttype entity by ID",
                "operationId": "get-equipmenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Equipmenttype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Equipmenttype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/members": {
            "get": {
                "description": "list member entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List member entities",
                "operationId": "list-member",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Member"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create member",
                "operationId": "create-member",
                "parameters": [
                    {
                        "description": "Member entity",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Member"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Member"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/members/{id}": {
            "get": {
                "description": "get member by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a member entity by ID",
                "operationId": "get-member",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Member ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Member"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "description": "list payment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List payment entities",
                "operationId": "list-payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Payment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create payment",
                "operationId": "create-payment",
                "parameters": [
                    {
                        "description": "Payment entity",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Payment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/payments/{id}": {
            "get": {
                "description": "get payment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a payment entity by ID",
                "operationId": "get-payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/paymentsbymembers/{id}": {
            "get": {
                "description": "get GetPaymentbyMember by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a GetPaymentbyMember entity by ID",
                "operationId": "get-GetPaymentbyMember",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GetPaymentbyMember ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Payment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/paymenttypes": {
            "get": {
                "description": "list paymenttype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List paymenttype entities",
                "operationId": "list-paymenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Paymenttype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create paymenttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create paymenttype",
                "operationId": "create-paymenttype",
                "parameters": [
                    {
                        "description": "Paymenttype entity",
                        "name": "paymenttype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Paymenttype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Paymenttype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/paymenttypes/{id}": {
            "get": {
                "description": "get paymenttype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a paymenttype entity by ID",
                "operationId": "get-paymenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Paymenttype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Paymenttype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/positions": {
            "get": {
                "description": "list position entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List position entities",
                "operationId": "list-position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Position"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create position",
                "operationId": "create-position",
                "parameters": [
                    {
                        "description": "Position entity",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Position"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Position"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/positions/{id}": {
            "get": {
                "description": "get position by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a position entity by ID",
                "operationId": "get-position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Position"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotionamounts": {
            "get": {
                "description": "list promotionamount entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List promotionamount entities",
                "operationId": "list-promotionamount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Promotionamount"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create promotionamount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create promotionamount",
                "operationId": "create-promotionamount",
                "parameters": [
                    {
                        "description": "Promotionamount entity",
                        "name": "promotionamount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Promotionamount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Promotionamount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotionamounts/{id}": {
            "get": {
                "description": "get promotionamount by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a promotionamount entity by ID",
                "operationId": "get-promotionamount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promotionamount ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Promotionamount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotions": {
            "get": {
                "description": "list promotion entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List promotion entities",
                "operationId": "list-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Promotion"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create promotion",
                "operationId": "create-promotion",
                "parameters": [
                    {
                        "description": "Promotion entity",
                        "name": "promotion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Promotion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotions/{id}": {
            "get": {
                "description": "get promotion by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a promotion entity by ID",
                "operationId": "get-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promotion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotiontypes": {
            "get": {
                "description": "list promotiontype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List promotiontype entities",
                "operationId": "list-promotiontype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Promotiontype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create promotiontype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create promotiontype",
                "operationId": "create-promotiontype",
                "parameters": [
                    {
                        "description": "Promotiontype entity",
                        "name": "promotiontype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Promotiontype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Promotiontype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotiontypes/{id}": {
            "get": {
                "description": "get promotiontype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a promotiontype entity by ID",
                "operationId": "get-promotiontype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promotiontype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Promotiontype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/salarys": {
            "get": {
                "description": "list salary entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List salary entities",
                "operationId": "list-salary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Salary"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create salary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create salary",
                "operationId": "create-salary",
                "parameters": [
                    {
                        "description": "Salary entity",
                        "name": "salary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Salary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Salary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/salarys/{id}": {
            "get": {
                "description": "get salary by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a salary entity by ID",
                "operationId": "get-salary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Salary ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Salary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/zones": {
            "get": {
                "description": "list zone entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List zone entities",
                "operationId": "list-zone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Zone"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create zone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create zone",
                "operationId": "create-zone",
                "parameters": [
                    {
                        "description": "Zone entity",
                        "name": "zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Zone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Zone"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/zones/{id}": {
            "get": {
                "description": "get zone by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a zone entity by ID",
                "operationId": "get-zone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Zone"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Bookcourse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "integer"
                },
                "booktime": {
                    "type": "string"
                },
                "course": {
                    "type": "integer"
                },
                "detail": {
                    "type": "string"
                },
                "employee": {
                    "type": "integer"
                },
                "member": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "controllers.Employee": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "employeeaddress": {
                    "type": "string"
                },
                "employeeid": {
                    "type": "string"
                },
                "employeename": {
                    "type": "string"
                },
                "idcardnumber": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "salary": {
                    "type": "integer"
                }
            }
        },
        "controllers.Equipmentrental": {
            "type": "object",
            "properties": {
                "employee": {
                    "type": "integer"
                },
                "equipment": {
                    "type": "integer"
                },
                "equipmenttype": {
                    "type": "integer"
                },
                "member": {
                    "type": "integer"
                },
                "rentalamount": {
                    "type": "integer"
                },
                "rentaldate": {
                    "type": "string"
                },
                "returndate": {
                    "type": "string"
                }
            }
        },
        "controllers.Promotionamount": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                }
            }
        },
        "controllers.Promotiontype": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "ent.Age": {
            "type": "object",
            "properties": {
                "AGE": {
                    "description": "AGE holds the value of the \"AGE\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AgeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AgeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.AgeEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Employee"
                    }
                }
            }
        },
        "ent.Bookcourse": {
            "type": "object",
            "properties": {
                "ACCESS": {
                    "description": "ACCESS holds the value of the \"ACCESS\" field.",
                    "type": "integer"
                },
                "BOOKTIME": {
                    "description": "BOOKTIME holds the value of the \"BOOKTIME\" field.",
                    "type": "string"
                },
                "DETAIL": {
                    "description": "DETAIL holds the value of the \"DETAIL\" field.",
                    "type": "string"
                },
                "PHONE": {
                    "description": "PHONE holds the value of the \"PHONE\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BookcourseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BookcourseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.BookcourseEdges": {
            "type": "object",
            "properties": {
                "course": {
                    "description": "Course holds the value of the course edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Course"
                },
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "member": {
                    "description": "Member holds the value of the member edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Member"
                }
            }
        },
        "ent.Classifier": {
            "type": "object",
            "properties": {
                "EQUIPMENTCLASSIFIER": {
                    "description": "EQUIPMENTCLASSIFIER holds the value of the \"EQUIPMENTCLASSIFIER\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClassifierQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClassifierEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ClassifierEdges": {
            "type": "object",
            "properties": {
                "equipment": {
                    "description": "Equipment holds the value of the equipment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Equipment"
                    }
                }
            }
        },
        "ent.Course": {
            "type": "object",
            "properties": {
                "COURSE": {
                    "description": "COURSE holds the value of the \"COURSE\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CourseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CourseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CourseEdges": {
            "type": "object",
            "properties": {
                "bookcourse": {
                    "description": "Bookcourse holds the value of the bookcourse edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookcourse"
                    }
                }
            }
        },
        "ent.Employee": {
            "type": "object",
            "properties": {
                "EMPLOYEEADDRESS": {
                    "description": "EMPLOYEEADDRESS holds the value of the \"EMPLOYEEADDRESS\" field.",
                    "type": "string"
                },
                "EMPLOYEEID": {
                    "description": "EMPLOYEEID holds the value of the \"EMPLOYEEID\" field.",
                    "type": "string"
                },
                "EMPLOYEENAME": {
                    "description": "EMPLOYEENAME holds the value of the \"EMPLOYEENAME\" field.",
                    "type": "string"
                },
                "IDCARDNUMBER": {
                    "description": "IDCARDNUMBER holds the value of the \"IDCARDNUMBER\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EmployeeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.EmployeeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.EmployeeEdges": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Age holds the value of the age edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Age"
                },
                "bookcourse": {
                    "description": "Bookcourse holds the value of the bookcourse edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookcourse"
                    }
                },
                "equipment": {
                    "description": "Equipment holds the value of the equipment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Equipment"
                    }
                },
                "equipmentrental": {
                    "description": "Equipmentrental holds the value of the equipmentrental edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Equipmentrental"
                    }
                },
                "payment": {
                    "description": "Payment holds the value of the payment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Payment"
                    }
                },
                "position": {
                    "description": "Position holds the value of the position edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Position"
                },
                "promotion": {
                    "description": "Promotion holds the value of the promotion edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Promotion"
                    }
                },
                "salary": {
                    "description": "Salary holds the value of the salary edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Salary"
                }
            }
        },
        "ent.Equipment": {
            "type": "object",
            "properties": {
                "EQUIPMENTAMOUNT": {
                    "description": "EQUIPMENTAMOUNT holds the value of the \"EQUIPMENTAMOUNT\" field.",
                    "type": "integer"
                },
                "EQUIPMENTDATE": {
                    "description": "EQUIPMENTDATE holds the value of the \"EQUIPMENTDATE\" field.",
                    "type": "string"
                },
                "EQUIPMENTDETAIL": {
                    "description": "EQUIPMENTDETAIL holds the value of the \"EQUIPMENTDETAIL\" field.",
                    "type": "string"
                },
                "EQUIPMENTNAME": {
                    "description": "EQUIPMENTNAME holds the value of the \"EQUIPMENTNAME\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EquipmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.EquipmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.EquipmentEdges": {
            "type": "object",
            "properties": {
                "classifier": {
                    "description": "Classifier holds the value of the classifier edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Classifier"
                },
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "equipmentrental": {
                    "description": "Equipmentrental holds the value of the equipmentrental edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Equipmentrental"
                    }
                },
                "equipmenttype": {
                    "description": "Equipmenttype holds the value of the equipmenttype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Equipmenttype"
                },
                "zone": {
                    "description": "Zone holds the value of the zone edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Zone"
                }
            }
        },
        "ent.Equipmentrental": {
            "type": "object",
            "properties": {
                "RENTALAMOUNT": {
                    "description": "RENTALAMOUNT holds the value of the \"RENTALAMOUNT\" field.",
                    "type": "integer"
                },
                "RENTALDATE": {
                    "description": "RENTALDATE holds the value of the \"RENTALDATE\" field.",
                    "type": "string"
                },
                "RETURNDATE": {
                    "description": "RETURNDATE holds the value of the \"RETURNDATE\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EquipmentrentalQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.EquipmentrentalEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.EquipmentrentalEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "equipment": {
                    "description": "Equipment holds the value of the equipment edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Equipment"
                },
                "equipmenttype": {
                    "description": "Equipmenttype holds the value of the equipmenttype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Equipmenttype"
                },
                "member": {
                    "description": "Member holds the value of the member edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Member"
                }
            }
        },
        "ent.Equipmenttype": {
            "type": "object",
            "properties": {
                "EQUIPMENTTYPE": {
                    "description": "EQUIPMENTTYPE holds the value of the \"EQUIPMENTTYPE\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EquipmenttypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.EquipmenttypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.EquipmenttypeEdges": {
            "type": "object",
            "properties": {
                "equipment": {
                    "description": "Equipment holds the value of the equipment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Equipment"
                    }
                },
                "equipmentrental": {
                    "description": "Equipmentrental holds the value of the equipmentrental edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Equipmentrental"
                    }
                }
            }
        },
        "ent.Member": {
            "type": "object",
            "properties": {
                "MEMBERID": {
                    "description": "MEMBERID holds the value of the \"MEMBERID\" field.",
                    "type": "string"
                },
                "MEMBERNAME": {
                    "description": "MEMBERNAME holds the value of the \"MEMBERNAME\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the MemberQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.MemberEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.MemberEdges": {
            "type": "object",
            "properties": {
                "bookcourse": {
                    "description": "Bookcourse holds the value of the bookcourse edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookcourse"
                    }
                },
                "equipmentrental": {
                    "description": "Equipmentrental holds the value of the equipmentrental edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Equipmentrental"
                    }
                },
                "payment": {
                    "description": "Payment holds the value of the payment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Payment"
                    }
                }
            }
        },
        "ent.Payment": {
            "type": "object",
            "properties": {
                "EMAIL": {
                    "description": "EMAIL holds the value of the \"EMAIL\" field.",
                    "type": "string"
                },
                "PAYMENTAMOUNT": {
                    "description": "PAYMENTAMOUNT holds the value of the \"PAYMENTAMOUNT\" field.",
                    "type": "string"
                },
                "PAYMENTDATE": {
                    "description": "PAYMENTDATE holds the value of the \"PAYMENTDATE\" field.",
                    "type": "string"
                },
                "PHONENUMBER": {
                    "description": "PHONENUMBER holds the value of the \"PHONENUMBER\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PaymentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PaymentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PaymentEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "member": {
                    "description": "Member holds the value of the member edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Member"
                },
                "paymenttype": {
                    "description": "Paymenttype holds the value of the paymenttype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Paymenttype"
                },
                "promotion": {
                    "description": "Promotion holds the value of the promotion edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Promotion"
                }
            }
        },
        "ent.Paymenttype": {
            "type": "object",
            "properties": {
                "TYPE": {
                    "description": "TYPE holds the value of the \"TYPE\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PaymenttypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PaymenttypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PaymenttypeEdges": {
            "type": "object",
            "properties": {
                "payment": {
                    "description": "Payment holds the value of the payment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Payment"
                    }
                }
            }
        },
        "ent.Position": {
            "type": "object",
            "properties": {
                "POSITION": {
                    "description": "POSITION holds the value of the \"POSITION\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PositionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PositionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PositionEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Employee"
                    }
                }
            }
        },
        "ent.Promotion": {
            "type": "object",
            "properties": {
                "CODE": {
                    "description": "CODE holds the value of the \"CODE\" field.",
                    "type": "string"
                },
                "DATE": {
                    "description": "DATE holds the value of the \"DATE\" field.",
                    "type": "string"
                },
                "DESC": {
                    "description": "DESC holds the value of the \"DESC\" field.",
                    "type": "string"
                },
                "NAME": {
                    "description": "NAME holds the value of the \"NAME\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PromotionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PromotionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PromotionEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "payment": {
                    "description": "Payment holds the value of the payment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Payment"
                    }
                },
                "promotionamount": {
                    "description": "Promotionamount holds the value of the promotionamount edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Promotionamount"
                },
                "promotiontype": {
                    "description": "Promotiontype holds the value of the promotiontype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Promotiontype"
                }
            }
        },
        "ent.Promotionamount": {
            "type": "object",
            "properties": {
                "AMOUNT": {
                    "description": "AMOUNT holds the value of the \"AMOUNT\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PromotionamountQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PromotionamountEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PromotionamountEdges": {
            "type": "object",
            "properties": {
                "promotion": {
                    "description": "Promotion holds the value of the promotion edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Promotion"
                    }
                }
            }
        },
        "ent.Promotiontype": {
            "type": "object",
            "properties": {
                "TYPE": {
                    "description": "TYPE holds the value of the \"TYPE\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PromotiontypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PromotiontypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PromotiontypeEdges": {
            "type": "object",
            "properties": {
                "promotion": {
                    "description": "Promotion holds the value of the promotion edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Promotion"
                    }
                }
            }
        },
        "ent.Salary": {
            "type": "object",
            "properties": {
                "SALARY": {
                    "description": "SALARY holds the value of the \"SALARY\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SalaryQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SalaryEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.SalaryEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Employee"
                    }
                }
            }
        },
        "ent.Zone": {
            "type": "object",
            "properties": {
                "EQUIPMENTZONE": {
                    "description": "EQUIPMENTZONE holds the value of the \"EQUIPMENTZONE\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ZoneQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ZoneEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ZoneEdges": {
            "type": "object",
            "properties": {
                "equipment": {
                    "description": "Equipment holds the value of the equipment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Equipment"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "SUT SA Example API Patient",
	Description: "This is a sample server for SUT SE 2563",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
